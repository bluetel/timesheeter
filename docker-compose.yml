version: "3"

services:
  app-db:
    image: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${APP_DB_USER}
      - POSTGRES_PASSWORD=${APP_DB_PASSWORD}
      - POSTGRES_DB=${APP_DB_NAME}
      - PGPORT=${APP_DB_PORT}
    ports:
      - ${APP_DB_PORT}:${APP_DB_PORT}
    volumes:
      - app-db:/var/lib/postgresql/data
    restart: always
  app-db-backup:
    env_file: .env
    image: offen/docker-volume-backup:latest
    environment:
      AWS_S3_BUCKET_NAME: ${APP_DB_BACKUP_BUCKET_NAME}
      AWS_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      AWS_ENDPOINT: ${S3_ENDPOINT_URL}
      BACKUP_RETENTION_DAYS: 14
    volumes:
      - 'app-db:/backup/data-backup:ro'
    restart: always
  bullmq-redis:
    env_file: .env
    image: docker.io/bitnami/redis:latest
    environment:
      - REDIS_PASSWORD=${BULLMQ_REDIS_PASSWORD}
      - REDIS_PORT_NUMBER=${BULLMQ_REDIS_PORT}
    ports:
      - ${BULLMQ_REDIS_PORT}:${BULLMQ_REDIS_PORT}
    volumes:
      - 'bullmq-redis:/bitnami/redis/data'
    restart: always
  bullmq-redis-backup:
    env_file: .env
    image: offen/docker-volume-backup:latest
    environment:
      AWS_S3_BUCKET_NAME: ${BULLMQ_REDIS_BACKUP_BUCKET_NAME}
      AWS_ACCESS_KEY_ID: ${S3_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${S3_SECRET_ACCESS_KEY}
      AWS_ENDPOINT: ${S3_ENDPOINT_URL}
      BACKUP_RETENTION_DAYS: 14
    volumes:
      - 'bullmq-redis:/backup/data-backup:ro'
    restart: always
  backhouse:
    env_file: .env
    environment:
      - BULLMQ_REDIS_HOST=bullmq-redis
      - APP_DB_HOST=app-db
    ports:
      - ${BULL_BOARD_PORT}:${BULL_BOARD_PORT}
    build:
      context: .
      dockerfile: Dockerfile.backhouse
    depends_on:
      - app-db
      - bullmq-redis
    restart: always

volumes:
  app-db:
    driver: local
  bullmq-redis:
    driver: local
